-c
只激活预处理，编译，和汇编，也就是他只把程序做成obj文件 

-S 　　
只激活预处理和编译，就是指把文件编译成为汇编代码。 

-E 　　
只激活预处理，这个不生成文件，你需要把它重定向到一个输出文件里 

-C 　　
在预处理的时候，不删除注释信息，一般和-E使用，有时候分析程序，用这个很方便的 

-M 　　生成文件关联的信息。包含目标文件所依赖的所有源代码你可以用gcc -M hello.c来测试一下，很简单。

-o 　　
制定目标名称，缺省的时候，gcc 编译出来的文件是a.out

-g
增加调试信息

-O0 　　-O1 　　-O2 　　-O3 　　
编译器的优化选项的4个级别，-O0表示没有优化，-O1为缺省值，-O3优化级别最高　 

-Dmacro 　　
相当于C语言中的#define macro 

-Idir 　　
在你是用#include"file"的时候，gcc/g++会先在当前目录查找你所制定的头文件，如果没有找到，他回到缺省的头文件目录找，如果使用-I制定了目录，他回先在你所制定的目录查找，然后再按常规的顺序去找. 

-llibrary 
　　制定编译的时候使用的库 
　　例子用法 
　　gcc -lcurses hello.c 
　　使用ncurses库编译程序 
　　 
-Ldir 
　　制定编译的时候，搜索库的路径。比如你自己的库，可以用它制定目录，不然 
　　编译器将只在标准库的目录找。这个dir就是目录的名称。 


-static 　　
此选项将禁止使用动态库，所以，编译出来的东西，一般都很大，也不需要什么动态连接库，就可以运行. 　　
-share 　　
此选项将尽量使用动态库，所以生成文件比较小，但是需要系统由动态库. 



gcc -dM -E - < /dev/null >>/home/gcc_macro.txt  查看默认的宏