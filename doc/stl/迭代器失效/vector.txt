 vector的earse造成迭代器失效的问题
1.当插入（push_back）一个元素后，end操作返回的迭代器肯定失效。

2.当插入（push_back）一个元素后，capacity返回值与没有插入元素之前相比有改变，则需要重新加载整个容器，此时first和end操作返回的迭代器都会失效。

（capacity和szie的区别）

3.当进行删除操作（erase，pop_back）后，指向删除点的迭代器全部失效；指向删除点后面的元素的迭代器也将全部失效。



4.使用earse返回的迭代器就是下一个迭代器

 38: //for后面不加++it，因为可能earse完毕返回的正是end，会出错，而是在不earse时加

 39: //适合结构体或者判断时需要多个参数的时候

 40: void doEarse2(vector<int>& v)

 41: {

 42: 

 43:   for (vector<int>::iterator it = v.begin(); it != v.end(); )

 44:   {

 45:     if (*it % 2 != 0)

 46:     {

 47:       //新的迭代

 48:       it = v.erase(it);

 49:     }

 50:     else

 51:     {

 52:       //没有删除时才加

 53:       ++it;

 54:     }

 55:   }

 56: }